/*
  THIS FILE HAS BEEN GENERATED BY CHEF
  ANY MANUAL MODIFICATIONS WILL BE OVERWRITTEN
  Ganglia configuration file
*/

globals {
  daemonize = yes
  setuid = yes
  user = ganglia
  debug_level = 0
  max_udp_msg_len = 1472
  mute = no
  deaf = no
  host_dmax = <%= node[:ganglia][:gmond][:host_dmax] %> /*secs */
  cleanup_threshold = <%= node[:ganglia][:gmond][:cleanup_threshold] %> /*secs */
  gexec = no
  send_metadata_interval = <%= node[:ganglia][:gmond][:send_metadata_interval] %> /*secs */
}

/* If a cluster attribute is specified, then all gmond hosts are wrapped inside
 * of a <CLUSTER> tag.  If you do not specify a cluster tag, then all <HOSTS> will
 * NOT be wrapped inside of a <CLUSTER> tag. */
cluster {
  name = "<%= node[:ganglia][:gmond][:cluster_name] %>"
  owner = "<%= node[:ganglia][:gmond][:cluster_owner] %>"
  latlong = "unspecified"
  url = "<%= node[:ganglia][:gmond][:cluster_url] %>"
}

/* The host section describes attributes of the host, like the location */
host {
  location = "<%= node[:ganglia][:gmond][:host_location] %>"
}

/* Feel free to specify as many udp_send_channels as you like. Gmond
   used to only support having a single channel */
<% node[:ganglia][:gmond][:udp_send_channels].each do |udp_send_channel| %>
udp_send_channel {
  <% udp_send_channel.each do |attribute, value| %>
    <%= "#{attribute} = #{value}" %>
  <% end %>
}

<% end %>

/* You can specify as many udp_recv_channels as you like as well. */
<% node[:ganglia][:gmond][:udp_recv_channels].each do |udp_recv_channel| %>
udp_recv_channel {
  <% udp_recv_channel.each do |attribute, value| %>
    <%= "#{attribute} = #{value}" %>
  <% end %>
}

<% end %>

/* You can specify as many tcp_accept_channels as you like to share
   an xml description of the state of the cluster */
<% node[:ganglia][:gmond][:tcp_accept_channels].each do |tcp_accept_channel| %>
tcp_accept_channel {
  <% tcp_accept_channel.each do |attribute, value| %>
    <%= "#{attribute} = #{value}" %>
  <% end %>
}

<% end %>
include ('/etc/ganglia/conf.d/*.conf')
